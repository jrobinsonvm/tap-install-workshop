
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mvn-test
spec:
  workspaces:
  - name: source
  steps:
  - name: test
    image: maven:3-openjdk-11
    script: |-
      mvn test -f $(workspaces.source.path)/
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tbs
spec:
  params:
  - name: app-name
  - name: app-image-tag
  workspaces:
  - name: source
  results:
  - name: image-digest
    description: Digest of the image just built.
  steps:
  - name: build-and-push
    image: kpack/kp
    script: |-
      #!/bin/bash
      set -euxo pipefail

      current_namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
      # Set contexts from local service account for kp-cli
      kubectl config set-cluster tbs-cluster --server=https://kubernetes.default \
        --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      kubectl config set-context tbs --cluster=tbs-cluster
      kubectl config set-credentials tbs-user \
        --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
      kubectl config set-context tbs --user=tbs-user \
        --namespace="${current_namespace}"
      kubectl config use-context tbs

      if kp image save $(params.app-name) \
        --tag $(params.app-image-tag) \
        --local-path $(workspaces.source.path)/. \
        --wait >/dev/null; then
        echo "Image build and push finished successfull"
      else
        echo Image build and push finished with error code $?
      fi

      kubectl get images.kpack.io spring-sensors -o jsonpath='{.status.latestImage}' | tee /tekton/results/image-digest
      cat /tekton/results/image-digest 
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: path-to-prod-pipeline
spec:
  params:
  - name: git-url
    type: string
  - name: git-revision
    type: string
    default: main
  - name: app-name
    type: string
  - name: app-image-tag
    type: string
  workspaces:
  - name: git-source
  tasks:
  - name: fetch-from-git
    taskRef:
      name: git-clone
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    workspaces:
    - name: output
      workspace: git-source
  - name: run-tests
    taskRef:
      name: mvn-test
    runAfter: 
    - fetch-from-git
    workspaces:
    - name: source
      workspace: git-source
  - name: build-image
    taskRef:
      name: tbs
    runAfter: 
    - run-tests
    params:
    - name: app-name
      value: $(params.app-name)
    - name: app-image-tag
      value: $(params.app-image-tag)
    workspaces:
    - name: source
      workspace: git-source
  - name: deploy-application
    taskRef:
      name: kn
    runAfter: 
    - build-image
    params:
    - name: ARGS
      value:
      - 'service'
      - 'create'
      - '$(params.app-name)'
      - '--force'
      - '--image=$(tasks.build-image.results.image-digest)'
---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: path-to-prod-pipeline-run
spec:
  workspaces:
  - name: git-source
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  pipelineRef:
    name: path-to-prod-pipeline
  params:
  - name: git-url
    value: https://github.com/tsalm-pivotal/spring-sensors.git
  - name: app-name
    value: spring-sensors
  - name: app-image-tag
#      value: ${CONTAINER_REGISTRY_HOSTNAME}/tap-wkld/spring-sensors-tekton
    value: harbor.emea.end2end.link/tap-wkld/spring-sensors-tekton